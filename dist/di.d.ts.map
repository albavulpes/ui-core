{"version":3,"sources":["di.ts"],"names":[],"mappings":"AAEA,wBAAgB,OAAO,CAAC,WAAW,CAAC,EAAE,MAAM,GAAG,iBAAiB,CAiB/D","file":"di.d.ts","sourcesContent":["import {Container} from 'typedi';\r\n\r\nexport function Require(serviceName?: string): PropertyDecorator {\r\n    return <T>(prototype: any, propertyKey: string) => {\r\n        let identifier: any = serviceName;\r\n\r\n        if (!identifier) {\r\n            identifier = Reflect.getMetadata('design:type', prototype, propertyKey);\r\n        }\r\n\r\n        if (delete prototype[propertyKey]) {\r\n            Object.defineProperty(prototype, propertyKey, {\r\n                get() {\r\n                    console.debug(`Resolved dependency: ${identifier}`);\r\n                    return Container.get(identifier);\r\n                }\r\n            });\r\n        }\r\n    };\r\n}\r\n"]}