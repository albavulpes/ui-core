{"version":3,"sources":["services/ui/ToastService.ts"],"names":[],"mappings":"AACA,OAAO,EAAC,aAAa,EAAC,MAAM,0CAA0C,CAAC;AACvE,OAAO,EAAC,aAAa,EAAC,MAAM,sBAAsB,CAAC;AAEnD,OAAO,oCAAoC,CAAC;AAC5C,OAAiB,EAAC,gBAAgB,EAAC,MAAM,UAAU,CAAC;AAEpD,qBACa,YAAa,YAAW,aAAa;IAG9C,aAAa,EAAE,aAAa,CAAC;;IAM7B,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,gBAAgB;IAOnD,KAAK,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,gBAAgB;IAOjD,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,gBAAgB;IAOhD,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,gBAAgB;CAMtD","file":"ToastService.d.ts","sourcesContent":["import {Inject, Service} from 'typedi';\r\nimport {IToastService} from '../../framework/interfaces/IToastService';\r\nimport {ConfigService} from '../app/ConfigService';\r\n\r\nimport 'izitoast/dist/css/iziToast.min.css';\r\nimport iziToast, {IziToastSettings} from 'izitoast';\r\n\r\n@Service()\r\nexport class ToastService implements IToastService {\r\n\r\n    @Inject()\r\n    ConfigService: ConfigService;\r\n\r\n    constructor() {\r\n        iziToast.settings(this.ConfigService.configuration.toast);\r\n    }\r\n\r\n    success(message: string, options?: IziToastSettings) {\r\n        iziToast.success({\r\n            message,\r\n            ...options\r\n        })\r\n    }\r\n\r\n    error(message: string, options?: IziToastSettings) {\r\n        iziToast.error({\r\n            message,\r\n            ...options\r\n        })\r\n    }\r\n\r\n    info(message: string, options?: IziToastSettings) {\r\n        iziToast.info({\r\n            message,\r\n            ...options\r\n        })\r\n    }\r\n\r\n    warning(message: string, options?: IziToastSettings) {\r\n        iziToast.warning({\r\n            message,\r\n            ...options\r\n        })\r\n    }\r\n}"]}