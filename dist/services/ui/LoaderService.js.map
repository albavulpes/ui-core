{"version":3,"sources":["services/ui/LoaderService.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,OAAO,EAAC,MAAM,QAAQ,CAAC;AAS/B;IAAA;IAeA,CAAC;IAbG,4BAAI,GAAJ;QACI,IAAM,MAAM,GAAG,iBAAiB,EAAE,CAAC;QACnC,IAAI,MAAM,EAAE;YACR,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SACjC;IACL,CAAC;IAED,4BAAI,GAAJ;QACI,IAAM,MAAM,GAAG,iBAAiB,EAAE,CAAC;QACnC,IAAI,MAAM,EAAE;YACR,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACpC;IACL,CAAC;IAdQ,aAAa;QADzB,OAAO,EAAE;OACG,aAAa,CAezB;IAAD,oBAAC;CAfD,AAeC,IAAA;SAfY,aAAa;AAiB1B,SAAS,iBAAiB;IACtB,OAAO,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;AACvD,CAAC","file":"LoaderService.js","sourcesContent":["import {Service} from 'typedi';\r\n\r\nexport interface ILoaderService {\r\n    show(): void;\r\n\r\n    hide(): void;\r\n}\r\n\r\n@Service()\r\nexport class LoaderService implements ILoaderService {\r\n\r\n    show(): void {\r\n        const loader = getLoaderInstance();\r\n        if (loader) {\r\n            loader.classList.add('shown');\r\n        }\r\n    }\r\n\r\n    hide(): void {\r\n        const loader = getLoaderInstance();\r\n        if (loader) {\r\n            loader.classList.remove('shown');\r\n        }\r\n    }\r\n}\r\n\r\nfunction getLoaderInstance() {\r\n    return document.getElementById('ml-global-loader');\r\n}"]}