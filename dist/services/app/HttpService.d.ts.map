{"version":3,"sources":["services/app/HttpService.ts"],"names":[],"mappings":"AACA,OAAc,EAAC,aAAa,EAAE,kBAAkB,EAAC,MAAM,OAAO,CAAC;AAE/D,OAAO,EAAC,aAAa,EAAC,MAAM,iBAAiB,CAAC;AAE9C,OAAO,IAAI,MAAM,0BAA0B,CAAC;AAC5C,OAAO,MAAM,MAAM,4BAA4B,CAAC;AAChD,OAAO,IAAI,MAAM,0BAA0B,CAAC;AAC5C,OAAO,KAAK,MAAM,2BAA2B,CAAC;AAC9C,OAAO,QAAQ,MAAM,8BAA8B,CAAC;AACpD,OAAO,MAAM,MAAM,4BAA4B,CAAC;AAEhD,MAAM,WAAW,YAAa,SAAQ,kBAAkB;CACvD;AAED,QAAA,MAAM,eAAe;;;;;;;CAOpB,CAAC;AAEF,aAAK,MAAM,GAAG,OAAO,eAAe,CAAC;AAErC,aAAK,oBAAoB,GAAG;KACvB,CAAC,IAAI,MAAM,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;CAC/C,CAAA;AAED,qBACa,WAAW;IACpB,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,aAAa,CAAC;IAE3C,GAAG,EAAE,oBAAoB,CAAC;gBAEd,aAAa,EAAE,aAAa;IAMxC,OAAO,CAAC,kBAAkB;CAY7B","file":"HttpService.d.ts","sourcesContent":["import {Service} from 'typedi';\r\nimport axios, {AxiosInstance, AxiosRequestConfig} from 'axios';\r\n\r\nimport {ConfigService} from './ConfigService';\r\n\r\nimport auth from '../../api/endpoints/auth';\r\nimport comics from '../../api/endpoints/comics';\r\nimport arcs from '../../api/endpoints/arcs';\r\nimport pages from '../../api/endpoints/pages';\r\nimport chapters from '../../api/endpoints/chapters';\r\nimport images from '../../api/endpoints/images';\r\n\r\nexport interface IHttpOptions extends AxiosRequestConfig {\r\n}\r\n\r\nconst __endpointDefns = {\r\n    auth,\r\n    comics,\r\n    arcs,\r\n    chapters,\r\n    pages,\r\n    images\r\n};\r\n\r\ntype eDefns = typeof __endpointDefns;\r\n\r\ntype EndpointInstancesMap = {\r\n    [K in keyof eDefns]: InstanceType<eDefns[K]>;\r\n}\r\n\r\n@Service()\r\nexport class HttpService {\r\n    protected readonly _adapter: AxiosInstance;\r\n\r\n    api: EndpointInstancesMap;\r\n\r\n    constructor(configService: ConfigService) {\r\n        this._adapter = axios.create(configService.configuration.http);\r\n\r\n        this.configureEndpoints();\r\n    }\r\n\r\n    private configureEndpoints() {\r\n        const self = this;\r\n        self.api = {} as any;\r\n\r\n        for (let endpointName in __endpointDefns) {\r\n            Object.defineProperty(self.api, endpointName, {\r\n                get() {\r\n                    return new (__endpointDefns as any)[endpointName](self._adapter);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n"]}