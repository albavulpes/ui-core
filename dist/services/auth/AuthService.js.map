{"version":3,"sources":["services/auth/AuthService.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,MAAM,EAAE,OAAO,EAAC,MAAM,QAAQ,CAAC;AAEvC,OAAO,EAAC,aAAa,EAAC,MAAM,iCAAiC,CAAC;AAG9D;IAAA;IAkCA,CAAC;IA1BS,wBAAE,GAAR;;;;4BACW,WAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,EAAA;4BAAvC,WAAO,SAAgC,EAAC;;;;KAC3C;IAEK,2BAAK,GAAX,UAAY,eAAuB,EAAE,QAAgB;;;;;4BAChC,WAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;4BAC/C,KAAK,EAAE,eAAe;4BACtB,QAAQ,EAAE,QAAQ;yBACrB,CAAC,EAAA;;wBAHI,QAAQ,GAAG,SAGf;wBAEF,WAAM,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,EAAA;;wBAAxC,SAAwC,CAAC;wBAEzC,WAAO,QAAQ,EAAC;;;;KACnB;IAEK,4BAAM,GAAZ;;;;4BACW,WAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,EAAA;4BAA3C,WAAO,SAAoC,EAAC;;;;KAC/C;IAEK,4BAAM,GAAZ,UAAa,QAAgB,EAAE,KAAa,EAAE,QAAgB;;;;4BACnD,WAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;4BACtC,QAAQ,EAAE,QAAQ;4BAClB,KAAK,EAAE,KAAK;4BACZ,QAAQ,EAAE,QAAQ;yBACrB,CAAC,EAAA;4BAJF,WAAO,SAIL,EAAC;;;;KACN;IA9BD;QADC,MAAM,CAAC,aAAa,CAAC;;oDACW;IAGjC;QADC,MAAM,CAAC,cAAM,OAAA,aAAa,EAAb,CAAa,CAAC;0CACL,aAAa;sDAAC;IAN5B,WAAW;QADvB,OAAO,EAAE;OACG,WAAW,CAkCvB;IAAD,kBAAC;CAlCD,AAkCC,IAAA;SAlCY,WAAW","file":"AuthService.js","sourcesContent":["import {Inject, Service} from 'typedi';\r\nimport {HttpService} from '../app/HttpService';\r\nimport {IdentityStore} from '../../stores/auth/IdentityStore';\r\n\r\n@Service()\r\nexport class AuthService {\r\n\r\n    @Inject('HttpService')\r\n    private HttpService: HttpService;\r\n\r\n    @Inject(() => IdentityStore)\r\n    private IdentityStore: IdentityStore;\r\n\r\n    async me() {\r\n        return await this.HttpService.auth.me();\r\n    }\r\n\r\n    async login(emailOrUsername: string, password: string) {\r\n        const response = await this.HttpService.auth.login({\r\n            Email: emailOrUsername,\r\n            Password: password\r\n        });\r\n\r\n        await this.IdentityStore.fetchIdentity();\r\n\r\n        return response;\r\n    }\r\n\r\n    async logout() {\r\n        return await this.HttpService.auth.logout();\r\n    }\r\n\r\n    async signup(username: string, email: string, password: string) {\r\n        return await this.HttpService.auth.signup({\r\n            UserName: username,\r\n            Email: email,\r\n            Password: password\r\n        });\r\n    }\r\n}"]}