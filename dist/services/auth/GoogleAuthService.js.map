{"version":3,"sources":["services/auth/GoogleAuthService.ts"],"names":[],"mappings":"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","file":"GoogleAuthService.js","sourcesContent":["import {Inject, Service} from 'typedi';\r\nimport {ConfigService} from '../app/ConfigService';\r\nimport {HttpService} from '../app/HttpService';\r\nimport {IdentityStore} from '../../stores/auth/IdentityStore';\r\nimport {AxiosError} from 'axios';\r\nimport {ToastService} from '../ui/ToastService';\r\n\r\nimport $script from 'scriptjs';\r\n\r\nconst GOOGLEAPI_CDN_URL = 'https://apis.google.com/js/client.js?onload=OnGoogleLoadCallback';\r\n\r\nlet isGoogleApiLoaded = false;\r\n\r\n@Service()\r\nexport class GoogleAuthService {\r\n\r\n    @Inject()\r\n    private ConfigService: ConfigService;\r\n\r\n    @Inject()\r\n    private HttpService: HttpService;\r\n\r\n    @Inject()\r\n    private IdentityStore: IdentityStore;\r\n\r\n    @Inject()\r\n    private ToastService: ToastService;\r\n\r\n    async loginWithGoogle() {\r\n        const accessToken = await sendAuthRequestToGoogle();\r\n\r\n        try {\r\n            const response = await this.HttpService.api.auth.loginWithGoogle({\r\n                AccessToken: accessToken\r\n            });\r\n\r\n            await this.IdentityStore.fetchIdentity();\r\n\r\n            return response;\r\n        }\r\n        catch (error) {\r\n            if (error.response && error.response.status === 400) {\r\n                this.ToastService.error(`Could not sign in. Please try again.`);\r\n\r\n                await signOutFromGoogle();\r\n            }\r\n            else {\r\n                this.ToastService.error(error.message);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nasync function initGoogleAPI() {\r\n    if (isGoogleApiLoaded)\r\n        return;\r\n\r\n    return await new Promise(resolve => {\r\n        (window as any).OnGoogleLoadCallback = function () {\r\n            delete (window as any).OnGoogleLoadCallback;\r\n\r\n            gapi.client.init({\r\n                apiKey: 'AIzaSyBiuYS2xfCpFmhkDiz2WI8j5Fo4T1BlaAo' // TODO: Need to be sent from api\r\n            });\r\n\r\n            isGoogleApiLoaded = true;\r\n\r\n            resolve();\r\n        };\r\n\r\n        // Load the Google script\r\n        $script(GOOGLEAPI_CDN_URL, () => {\r\n        });\r\n    });\r\n}\r\n\r\nasync function sendAuthRequestToGoogle(): Promise<string> {\r\n    await initGoogleAPI();\r\n\r\n    return await new Promise<string>((resolve, reject) => {\r\n        gapi.auth.authorize({\r\n                client_id: '445973792215-f7iin0g2ed8iouaeeq0s7cag8io6nhug.apps.googleusercontent.com', // TODO: Need to be sent from api\r\n                scope: [\r\n                    'https://www.googleapis.com/auth/userinfo.profile',\r\n                    'https://www.googleapis.com/auth/userinfo.email'\r\n                ],\r\n                immediate: false\r\n            },\r\n            (authResult) => {\r\n                if (authResult.error && authResult.error !== 'popup_closed_by_user') {\r\n                    return reject(new Error(authResult.error));\r\n                }\r\n\r\n                resolve(authResult.access_token);\r\n            }\r\n        );\r\n    });\r\n}\r\n\r\nasync function signOutFromGoogle(): Promise<void> {\r\n    await initGoogleAPI();\r\n\r\n    gapi.auth.setToken(null);\r\n    gapi.auth.signOut();\r\n}"]}