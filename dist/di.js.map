{"version":3,"sources":["di.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAC,MAAM,QAAQ,CAAC;AAEjC,MAAM,UAAU,OAAO,CAAC,WAAoB;IACxC,OAAO,UAAI,SAAc,EAAE,WAAmB;QAC1C,IAAI,UAAU,GAAQ,WAAW,CAAC;QAElC,IAAI,CAAC,UAAU,EAAE;YACb,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;SAC3E;QAED,IAAI,OAAO,SAAS,CAAC,WAAW,CAAC,EAAE;YAC/B,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,WAAW,EAAE;gBAC1C,GAAG;oBACC,OAAO,CAAC,KAAK,CAAC,0BAAwB,UAAY,CAAC,CAAC;oBACpD,OAAO,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACrC,CAAC;aACJ,CAAC,CAAC;SACN;IACL,CAAC,CAAC;AACN,CAAC","file":"di.js","sourcesContent":["import {Container} from 'typedi';\r\n\r\nexport function Require(serviceName?: string): PropertyDecorator {\r\n    return <T>(prototype: any, propertyKey: string) => {\r\n        let identifier: any = serviceName;\r\n\r\n        if (!identifier) {\r\n            identifier = Reflect.getMetadata('design:type', prototype, propertyKey);\r\n        }\r\n\r\n        if (delete prototype[propertyKey]) {\r\n            Object.defineProperty(prototype, propertyKey, {\r\n                get() {\r\n                    console.debug(`Resolved dependency: ${identifier}`);\r\n                    return Container.get(identifier);\r\n                }\r\n            });\r\n        }\r\n    };\r\n}\r\n"]}