{"version":3,"sources":["api/ApiEndpoint.ts"],"names":[],"mappings":"AAEA;IAGI,qBAAY,OAAsB;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;IAEO,sCAAgB,GAAxB,UAAyB,OAAsB;QAC3C,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,EAAR,CAAQ,EAAE,UAAC,KAAK;YAC1D,IAAI,KAAK,CAAC,QAAQ,EAAE;gBAChB,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;aACvC;YAED,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC;IACnB,CAAC;IACL,kBAAC;AAAD,CAlBA,AAkBC,IAAA","file":"ApiEndpoint.js","sourcesContent":["import {AxiosInstance} from 'axios';\r\n\r\nexport class ApiEndpoint {\r\n    protected readonly adapter: AxiosInstance;\r\n\r\n    constructor(adapter: AxiosInstance) {\r\n        this.adapter = this.configureAdapter(adapter);\r\n    }\r\n\r\n    private configureAdapter(adapter: AxiosInstance) {\r\n        adapter.interceptors.response.use(response => response, (error) => {\r\n            if (error.response) {\r\n                error.message = error.response.data;\r\n            }\r\n\r\n            return Promise.reject(error);\r\n        });\r\n\r\n        return adapter;\r\n    }\r\n}"]}