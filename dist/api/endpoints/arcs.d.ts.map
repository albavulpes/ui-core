{"version":3,"sources":["api/endpoints/arcs.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,gBAAgB,CAAC;AAE3C,MAAM,CAAC,OAAO,MAAO,SAAQ,WAAW;IAC9B,MAAM,CAAC,OAAO,EAAE,MAAM,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;IAUvC,GAAG,CAAC,EAAE,EAAE,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC;IAM7B,IAAI,CAAC,IAAI,EAAE,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;IAM7B,GAAG,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;CAKjD","file":"arcs.d.ts","sourcesContent":["import {ApiEndpoint} from '../ApiEndpoint';\r\n\r\nexport default class extends ApiEndpoint {\r\n    async getAll(comicId: string): Promise<Arc[]> {\r\n        const response = await this.adapter.get<Arc[]>('/arcs', {\r\n            params: {\r\n                comicId\r\n            }\r\n        });\r\n\r\n        return response.data;\r\n    }\r\n\r\n    async get(id: string): Promise<Arc> {\r\n        const response = await this.adapter.get<Arc>(`/arcs/${id}`);\r\n\r\n        return response.data;\r\n    }\r\n\r\n    async post(data: Arc): Promise<Arc> {\r\n        const response = await this.adapter.post<Arc>(`/arcs`, data);\r\n\r\n        return response.data;\r\n    }\r\n\r\n    async put(id: string, data: Arc): Promise<Arc> {\r\n        const response = await this.adapter.put<Arc>(`/arcs/${id}`, data);\r\n\r\n        return response.data;\r\n    }\r\n}"]}