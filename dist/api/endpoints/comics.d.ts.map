{"version":3,"sources":["api/endpoints/comics.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,gBAAgB,CAAC;AAE3C,MAAM,CAAC,OAAO,MAAO,SAAQ,WAAW;IAC9B,MAAM,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC;IAMlC,GAAG,CAAC,EAAE,EAAE,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC;IAMvC,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;IAMjC,GAAG,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;IAM5C,MAAM,CAAC,EAAE,EAAE,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;IAMlC,OAAO,CAAC,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;CAS5D","file":"comics.d.ts","sourcesContent":["import {ApiEndpoint} from '../ApiEndpoint';\r\n\r\nexport default class extends ApiEndpoint {\r\n    async getAll(): Promise<ComicResponse[]> {\r\n        const response = await this.adapter.get<ComicResponse[]>('/comics');\r\n\r\n        return response.data;\r\n    }\r\n\r\n    async get(id: string): Promise<ComicResponse> {\r\n        const response = await this.adapter.get<ComicResponse>(`/comics/${id}`);\r\n\r\n        return response.data;\r\n    }\r\n\r\n    async post(data: Comic): Promise<Comic> {\r\n        const response = await this.adapter.post<Comic>(`/comics`, data);\r\n\r\n        return response.data;\r\n    }\r\n\r\n    async put(id: string, data: Comic): Promise<Comic> {\r\n        const response = await this.adapter.put<Comic>(`/comics/${id}`, data);\r\n\r\n        return response.data;\r\n    }\r\n\r\n    async delete(id: string): Promise<Comic> {\r\n        const response = await this.adapter.delete(`/comics/${id}`);\r\n\r\n        return response.data;\r\n    }\r\n\r\n    async publish(id: string, state: boolean): Promise<Comic> {\r\n        const response = await this.adapter.put<Comic>(`/comics/${id}/publish`, null, {\r\n            params: {\r\n                state\r\n            }\r\n        });\r\n\r\n        return response.data;\r\n    }\r\n}"]}