{"version":3,"sources":["api/endpoints/chapters.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,gBAAgB,CAAC;AAE3C;IAA6B,qCAAW;IAAxC;;IA4CA,CAAC;IA3CS,0BAAM,GAAZ,UAAa,OAAe;;;;;4BACP,WAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAyB,WAAW,EAAE;4BACzE,MAAM,EAAE;gCACJ,OAAO,SAAA;6BACV;yBACJ,CAAC,EAAA;;wBAJI,QAAQ,GAAG,SAIf;wBAEF,WAAO,QAAQ,CAAC,IAAI,EAAC;;;;KACxB;IAEK,uBAAG,GAAT,UAAU,EAAU;;;;;4BACC,WAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAkB,eAAa,EAAI,CAAC,EAAA;;wBAArE,QAAQ,GAAG,SAA0D;wBAE3E,WAAO,QAAQ,CAAC,IAAI,EAAC;;;;KACxB;IAEK,wBAAI,GAAV,UAAW,IAAa;;;;;4BACH,WAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAkB,WAAW,EAAE,IAAI,CAAC,EAAA;;wBAAtE,QAAQ,GAAG,SAA2D;wBAE5E,WAAO,QAAQ,CAAC,IAAI,EAAC;;;;KACxB;IAEK,uBAAG,GAAT,UAAU,EAAU,EAAE,IAAa;;;;;4BACd,WAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAkB,eAAa,EAAI,EAAE,IAAI,CAAC,EAAA;;wBAA3E,QAAQ,GAAG,SAAgE;wBAEjF,WAAO,QAAQ,CAAC,IAAI,EAAC;;;;KACxB;IAEK,0BAAM,GAAZ,UAAa,EAAU;;;;;4BACF,WAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,eAAa,EAAI,CAAC,EAAA;;wBAAvD,QAAQ,GAAG,SAA4C;wBAE7D,WAAO,QAAQ,CAAC,IAAI,EAAC;;;;KACxB;IAEK,2BAAO,GAAb,UAAc,EAAU,EAAE,KAAc;;;;;4BACnB,WAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAU,eAAa,EAAE,aAAU,EAAE,IAAI,EAAE;4BAC9E,MAAM,EAAE;gCACJ,KAAK,OAAA;6BACR;yBACJ,CAAC,EAAA;;wBAJI,QAAQ,GAAG,SAIf;wBAEF,WAAO,QAAQ,CAAC,IAAI,EAAC;;;;KACxB;IACL,gBAAC;AAAD,CA5CA,AA4CC,CA5C4B,WAAW,GA4CvC","file":"chapters.js","sourcesContent":["import {ApiEndpoint} from '../ApiEndpoint';\r\n\r\nexport default class extends ApiEndpoint {\r\n    async getAll(comicId: string): Promise<ChapterGroupResponse[]> {\r\n        const response = await this.adapter.get<ChapterGroupResponse[]>('/chapters', {\r\n            params: {\r\n                comicId\r\n            }\r\n        });\r\n\r\n        return response.data;\r\n    }\r\n\r\n    async get(id: string): Promise<ChapterResponse> {\r\n        const response = await this.adapter.get<ChapterResponse>(`/chapters/${id}`);\r\n\r\n        return response.data;\r\n    }\r\n\r\n    async post(data: Chapter): Promise<Chapter> {\r\n        const response = await this.adapter.post<ChapterResponse>(`/chapters`, data);\r\n\r\n        return response.data;\r\n    }\r\n\r\n    async put(id: string, data: Chapter): Promise<Chapter> {\r\n        const response = await this.adapter.put<ChapterResponse>(`/chapters/${id}`, data);\r\n\r\n        return response.data;\r\n    }\r\n\r\n    async delete(id: string): Promise<Chapter> {\r\n        const response = await this.adapter.delete(`/chapters/${id}`);\r\n\r\n        return response.data;\r\n    }\r\n\r\n    async publish(id: string, state: boolean): Promise<Chapter> {\r\n        const response = await this.adapter.put<Chapter>(`/chapters/${id}/publish`, null, {\r\n            params: {\r\n                state\r\n            }\r\n        });\r\n\r\n        return response.data;\r\n    }\r\n}"]}