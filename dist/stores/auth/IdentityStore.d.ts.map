{"version":3,"sources":["stores/auth/IdentityStore.ts"],"names":[],"mappings":"AAAA,OAAO,EAA2B,UAAU,EAAC,MAAM,wBAAwB,CAAC;AAE5E,OAAO,EAAC,WAAW,EAAC,MAAM,iCAAiC,CAAC;AAE5D,qBACa,aAAc,SAAQ,UAAU;IAEzC,QAAQ,EAAE,MAAM,CAAC;IACjB,KAAK,EAAE,MAAM,CAAC;IAGd,WAAW,EAAE,WAAW,CAAC;IAGnB,aAAa;IAOnB,OAAO,CAAC,cAAc;CAIzB","file":"IdentityStore.d.ts","sourcesContent":["import {Action, Module, Mutation, VuexModule} from 'vuex-module-decorators';\r\nimport di, {Require} from '../../di';\r\nimport {AuthService} from '../../services/auth/AuthService';\r\n\r\n@Module\r\nexport class IdentityStore extends VuexModule {\r\n\r\n    UserName: string;\r\n    Email: string;\r\n\r\n    @Require()\r\n    AuthService: AuthService;\r\n\r\n    @Action\r\n    async fetchIdentity() {\r\n        const statusResponse = await this.AuthService.me();\r\n\r\n        this.updateIdentity(statusResponse);\r\n    }\r\n\r\n    @Mutation\r\n    private updateIdentity(identity: StatusResponse) {\r\n        this.UserName = identity.UserName;\r\n        this.Email = identity.Email;\r\n    }\r\n}\r\n\r\ndi.service('IdentityStore', IdentityStore);\r\n"]}