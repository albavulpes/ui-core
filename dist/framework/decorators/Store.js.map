{"version":3,"sources":["framework/decorators/Store.ts"],"names":[],"mappings":"AAAA,OAAO,EAA2B,KAAK,EAAC,MAAM,MAAM,CAAC;AAErD;IAOI;QAAA,iBAMC;QALG,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,CAAM;YAC1B,KAAK,EAAE,cAAM,OAAA,KAAI,CAAC,UAAU,EAAf,CAAe;YAC5B,OAAO,EAAE,IAAI,CAAC,aAAa;YAC3B,SAAS,EAAE,IAAI,CAAC,eAAe;SAClC,CAAC,CAAC;IACP,CAAC;IACL,gBAAC;AAAD,CAdA,AAcC,IAAA;;AAED,MAAM,UAAU,KAAK;IACjB,OAAO,UAAC,MAAiB,EAAE,WAAmB;QAE1C,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,IAAI,EAAE,CAAC;QAC5C,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;QAEtC,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,WAAW,EAAE;YACvC,GAAG;gBACC,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;gBACjC,OAAO,KAAK,CAAC,WAAW,CAAC,CAAC;YAC9B,CAAC;YACD,GAAG,YAAC,KAAU;gBACV,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;gBACjC,KAAK,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;YAC/B,CAAC;SACJ,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAED,MAAM,UAAU,MAAM;IAClB,OAAO,UAAC,MAAiB,EAAE,WAAmB,EAAE,UAAe;QAC3D,IAAI,YAAY,GAAG,UAAU,CAAC,KAAK,CAAC;QAEpC,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,IAAI,EAAE,CAAC;QAClD,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,UAAU,OAAO,EAAE,OAAO;YAC1D,OAAO,YAAY,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC,CAAC;QAEF,UAAU,CAAC,KAAK,GAAG,UAAU,OAAY;YACrC,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvC,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QACvD,CAAC,CAAC;IACN,CAAC,CAAC;AACN,CAAC;AAED,MAAM,UAAU,QAAQ;IACpB,OAAO,UAAC,MAAiB,EAAE,WAAmB,EAAE,UAAe;QAC3D,IAAI,YAAY,GAAG,UAAU,CAAC,KAAK,CAAC;QAEpC,MAAM,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,IAAI,EAAE,CAAC;QACtD,MAAM,CAAC,eAAe,CAAC,WAAW,CAAC,GAAG,UAAU,KAAK,EAAE,OAAO;YAC1D,OAAO,YAAY,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC,CAAC;QAEF,UAAU,CAAC,KAAK,GAAG,UAAU,OAAY;YACrC,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QACrD,CAAC,CAAC;IACN,CAAC,CAAC;AACN,CAAC","file":"Store.js","sourcesContent":["import {ActionTree, MutationTree, Store} from 'vuex';\r\n\r\nexport abstract class VuexStore {\r\n    __stateMap: any;\r\n    __actionsTree: ActionTree<any, any>;\r\n    __mutationsTree: MutationTree<any>;\r\n\r\n    __store: Store<any>;\r\n\r\n    constructor() {\r\n        this.__store = new Store<any>({\r\n            state: () => this.__stateMap,\r\n            actions: this.__actionsTree,\r\n            mutations: this.__mutationsTree\r\n        });\r\n    }\r\n}\r\n\r\nexport function State(): PropertyDecorator {\r\n    return (target: VuexStore, propertyKey: string) => {\r\n        // Init state props with null (so they can be reactive)\r\n        target.__stateMap = target.__stateMap || {};\r\n        target.__stateMap[propertyKey] = null;\r\n\r\n        Object.defineProperty(target, propertyKey, {\r\n            get() {\r\n                const state = this.__store.state;\r\n                return state[propertyKey];\r\n            },\r\n            set(value: any) {\r\n                const state = this.__store.state;\r\n                state[propertyKey] = value;\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\nexport function Action(): MethodDecorator {\r\n    return (target: VuexStore, propertyKey: string, descriptor: any) => {\r\n        let memberMethod = descriptor.value;\r\n\r\n        target.__actionsTree = target.__actionsTree || {};\r\n        target.__actionsTree[propertyKey] = function (context, payload) {\r\n            return memberMethod(payload);\r\n        };\r\n\r\n        descriptor.value = function (payload: any) {\r\n            memberMethod = memberMethod.bind(this);\r\n            return this.__store.dispatch(propertyKey, payload);\r\n        };\r\n    };\r\n}\r\n\r\nexport function Mutation(): MethodDecorator {\r\n    return (target: VuexStore, propertyKey: string, descriptor: any) => {\r\n        let memberMethod = descriptor.value;\r\n\r\n        target.__mutationsTree = target.__mutationsTree || {};\r\n        target.__mutationsTree[propertyKey] = function (state, payload) {\r\n            return memberMethod(payload);\r\n        };\r\n\r\n        descriptor.value = function (payload: any) {\r\n            memberMethod = memberMethod.bind(this);\r\n            return this.__store.commit(propertyKey, payload);\r\n        };\r\n    };\r\n}"]}